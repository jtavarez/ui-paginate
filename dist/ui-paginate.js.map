{"version":3,"sources":["../ui-paginate.src.js"],"names":[],"mappings":"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","file":"ui-paginate.js","sourcesContent":["/*!\n * Paginate.js v0.1.0\n * (c) 2016 Jason Tavarez\n * Released under the MIT License.\n */\n\n// All of these are used in constructing our uiPaginate instance\n// and can be overriden by the user\nvar defaultOptions = {\n  \n  // Accepts selector, nodeList (useful for combining with other plugins/logic) or array or integer\n  items : null,\n  itemsPerPage : 10,\n  startingPage : 0,\n  // Where our pagination links will go. Can be false if user just wants to work with data object\n  paginateContainer : false,\n  // Applied to all links in addition to specific ones (first, last, disabled, middle)\n  className : 'page-link',\n  prefix : 'page-', // prepended before secondary classes (button, disabled, first, last)\n  skipLabels : ['First', 'Last'], // Can be set to false to hide\n  skipLabelsInclusive : true, // If first and last label showing, still show '1' and 'n' buttons\n  incrementLabels : ['Prev', 'Next'], // Can be set to false to hide\n  incrementCounter : 1,\n  divider : \"...\", // // Can be set to false to hide (though you shouldn't!)\n  displaySinglePage : false, // by default, links will only show if there is more than one page\n  marginPages : 2, // can also be false/0\n  centerPages : 5, // Minimum of 3 should be enforced\n  element : \"span\",\n\n  // hooks\n  onPagesCreated : null,\n  onPageSelected : null\n}\n\nfunction setConfig(config) {\n  // If string\n  if ( isString(config.items) ) {\n    \n    config.items = document.querySelectorAll(config.items)\n    config.totalItems = config.items.length\n    \n\n  // If nodelist\n  } else if (isNodeList(config.items)) {\n\n    config.totalItems = config.items.length\n  // If array\n  } else if (Array.isArray(config.items)) {\n\n    config.totalItems = config.items.length\n  \n  // If integer\n  } else if (isInteger(config.items)) {\n    \n    config.totalItems = config.items \n\n  } else {\n    console.error('Nothing to show for items attribute :(')\n    // return false\n  }\n\n  \n  \n  // Ensure user supplied tag is one from our list\n  config.element = validateTagType(config.element)  \n}\n\n// --------------------------------------------------------\n// Private methods (helper functions)\n// --------------------------------------------------------\n\n// Validate user input for tag type during initialization\nfunction validateTagType(tag) {\n    return (['div','span','a','li','th','td'].indexOf(tag) > -1) ? tag : defaultOptions.element\n}\n\n// Used across plugin to validate user input or calculations\n// (i.e. ensure totalPages is always at least 1)\nfunction ensureNumberInBounds (num, min, max) {\n\n  if (num<min)\n    return min\n  if (num>max)\n    return max\n\n  return num\n}\n\n// Creates simple array of integers used in creating\n// pagination elements\n// example output : [22,23,24,25,26,27]\nfunction createPageArray (startingIndex = 0, len) {  \n  var arr = []\n  for (var i=startingIndex; i<len+startingIndex; i++){\n    arr.push(i)\n  }\n  return arr\n}\n\n\nfunction getTotalNumPages (numItems, itemsPerPage) {\n  return Math.ceil(numItems/itemsPerPage)\n}\n\nfunction isNodeList(value) {\n  \n\n  if (value[0]===undefined)\n    return false\n\n  return ( typeof value === 'object'\n    && typeof value.length === 'number'\n    && value[0].nodeType > 0\n    && typeof value[0] === \"object\" )\n}\n\nfunction isString (value) {\n  return toString.call(value) == '[object String]';\n}\n\n// Given our config object and desired page number,\n// we create a new instance of our info object, which\n// contains all pertinent pagination info that will be\n// returned to the user\nfunction setInfo(config, pageNum = 0) {\n    \n    let i = {}\n\n    \n\n    i.itemsPerPage  = config.itemsPerPage\n    i.totalItems    = config.totalItems\n    \n\n    // we apply 'ensureNumberInBounds()' to ensure we somehow don't end up with more pages than exist items\n    // and also to avoid zero based calculations with numeer of pages (minimum is one as even for zero titak\n    // items, that is technically still one page worth)\n    i.totalPages = ensureNumberInBounds(getTotalNumPages(i.totalItems, config.itemsPerPage), 1, i.totalItems)\n\n    // Our current page (bound to range of pagination no matter what)\n    i.current = ensureNumberInBounds(pageNum, 0, i.totalPages-1)\n    \n    i.firstItemIndex = (i.current) * i.itemsPerPage\n    i.lastItemIndex = (i.current) * i.itemsPerPage + i.itemsPerPage - 1\n    \n    i.isFirst = (i.current===0) ? true : false\n    i.isLast = (i.current===i.totalPages-1) ? true : false\n    \n    // To account for last page with partial lists\n    if (i.isLast)\n      i.lastItemIndex = (i.totalItems>0) ? i.totalItems - 1 : 0\n\n    // Should never be less than 0\n    i.prev = ensureNumberInBounds(i.current-config.incrementCounter, 0, i.totalPages)\n    // Should never be more than (totalPages-1) (which could also be zero if just one page)\n    i.next = ensureNumberInBounds(i.current+config.incrementCounter, 0, i.totalPages-1)\n\n    // If it's a small number of pages, it will always be near both the start and end,\n    // and so we avoid trying to divy up the pages with dividers and marginPages\n    // (ie. funny behavior will occur if marginPages=1, centerPages=5, and there are ~8 total pages)\n    if (i.totalPages <= config.centerPages + (config.marginPages*2) + (config.dividerOffset*2)) {\n      i.isNearStart = true\n      i.isNearEnd = true       \n    // Else we calculate as normal\n    } else {\n      i.isNearStart = (i.current - config.centerOffset < config.marginPages + config.dividerOffset)\n      i.isNearEnd = (i.current + config.centerOffset >= i.totalPages - config.marginPages - config.dividerOffset) \n    }\n\n    return i\n}\n\n\nfunction isInteger(obj) { return !isNaN(parseInt(obj)) }\n\nfunction emptyElement(div) {\n  while (div.firstChild) {\n    div.removeChild(div.firstChild);\n  }\n}\n\nfunction noResults(selectorType) {\n  console.warn('No results given')\n  return false\n}\n\n\n// --------------------------------------------------------\n// uiPaginate constructor\n// --------------------------------------------------------\n// class uiPaginate {\n// No shorthand, need block scope to check for lack of 'new'\nvar uiPaginate = function(options) {\n  \n    // combine default options with user inputs to create\n    // our config object\n    let config = Object.assign({}, defaultOptions, options)\n\n    // Some last extra vars we need in our config\n    Object.assign(config, {\n      centerOffset : Math.floor(config.centerPages/2),\n      dividerOffset : 1,\n      totalItems : 0\n    })\n\n    \n    setConfig(config)\n    // Information sent back to user, relevant pagination info\n    // is contained here and updated whenever new page is selected\n    // or when object is reconstructed\n    let info = setInfo(config, 0)\n\n    // This is more useful data but as it relates to pagination and\n    // creating buttons / labels.\n    let pages = {\n      leftMarginPages : [],\n      centerPages : [],\n      rightMarginPages : []\n    }\n\n    // Element where we will be inserting our pagination elements\n    let el = {\n      rowsParent : config.items.length > 0 ? config.items[0].parentNode : false,\n      paginationParent : document.querySelector(config.paginateContainer) ? document.querySelector(config.paginateContainer) : false\n    }\n    \n\n    if (el.paginationParent){\n\n      el.paginationParent.addEventListener(\"click\", (e)=>{\n        // Exclude clicks inside pagination container that aren't actually\n        // on a page\n        var pageNum = e.srcElement.pageNumber\n        \n        if (pageNum !== undefined) {\n        \n          api.setPage(pageNum)\n        }\n      })      \n    }\n\n\n    // Function hook\n    if (config.onCreated) {\n      config.onCreated(info.totalPages)\n    }\n\n\n\n\n\n  /**\n   * Given a number and using info and config objects,\n   * calculates what pages will be shown to user (margin pages,\n   * centerPages, divider, etc) \n   * \n   * @param  {Number} Selected page number (usually what user)\n   */\n  let _setPages =  (number) => {\n\n    let centerStart = info.current - config.centerOffset\n    let centerLength = config.centerPages\n\n    // If for some reason marginPage count is higher than centerPage, which will account for that\n    let maxFromConfig = config.centerPages >= config.marginPages ? config.centerPages : config.marginPages\n    \n    // We want to hide marginPages on either side if centerPages come close enough to overlap\n    // ----------------------\n    // If we're near the edge of the left side (start), we set centerPages starting index to zero \n    // and length equal to selectedPage + centerOffset (usual) OR max that was defined earlier\n    // This ensures pages that we put here are still never less than marginPages #\n    if ( info.isNearStart ) {\n      centerStart = 0\n      let maxFromCurrentPage = info.current + config.centerOffset + config.dividerOffset\n      centerLength = maxFromCurrentPage >= maxFromConfig ? maxFromCurrentPage : maxFromConfig\n    }\n\n    // If selectedPage is near the end, then we ensure last number in centerRange is always the last page\n    // from pagination\n    if ( info.isNearEnd ) {\n\n      let startIndex = info.current - config.centerOffset\n      let maxFromCurrentPage = info.current - config.centerOffset - config.dividerOffset\n\n      // In case there is only one or a few pages, we don't reset centerStart (since both\n      // isNearStart and isNearEnd will be true)\n      if (!info.isNearStart)\n        centerStart = startIndex <= info.totalPages - maxFromConfig ? startIndex : info.totalPages - maxFromConfig\n\n      centerLength = info.totalPages - centerStart\n    } \n\n      // Create our arrays!\n      pages.leftMarginPages = createPageArray(0, (info.isNearStart? 0 : config.marginPages))\n      pages.centerPages = createPageArray(centerStart, centerLength)\n      pages.rightMarginPages = createPageArray(info.totalPages-config.marginPages, (info.isNearEnd? 0 : config.marginPages))  \n\n  }\n\n  /**\n   * Creates a single element used in pagination, given supplied inputs\n   * @param  {Number}   Page number it represents (can be null, for divider elements, etc)\n   * @param  {String}   Label to show to user (defaulting to index+1, since zero-based)\n   * @param  {String}   Class or classes to add\n   * @param  {Boolean}  Whether to add disabled class or not\n   * @return {DOM Element}\n   */\n  let _createElement = (index=0, label=index+1, classString, isDisabled = false) => {\n\n\n    let elem = document.createElement(config.element)    \n    elem.appendChild(document.createTextNode(label))\n\n    if (index!==null) {\n      elem.pageNumber = isDisabled ? undefined : index\n    }\n\n    \n\n    elem.classList.add(config.className)\n    if (classString)\n      elem.classList.add(classString.split(' '))\n\n    if (isDisabled)\n      elem.classList.add(config.prefix+'disabled')\n    else if (info.current===index)\n      elem.classList.add(config.prefix+'active')\n    \n    return elem\n  }\n\n  /**\n   * Called whenever page changes, clears pagination element\n   * and recreates page elements (using pages{} as reference)\n   * @param  {Number} Selected page number\n   */\n  let _drawPageLinks = (num) => {\n\n      \n    // Clear children from node\n    emptyElement(el.paginationParent)\n\n    // No pagination elements drawn if one page\n    // if (info.totalPages===1)\n      // return\n\n    // All page elements inserted into fragment,\n    // fragment then inserted into DOM\n    var paginationFragment = document.createDocumentFragment()\n\n    // Created elements inserted here first and then added into fragment in one go\n    let elemArr = []\n\n    // If set to false, we don't add these buttons, otherwise add supplied label\n    // (FIRST)\n    if (config.skipLabels) {\n      elemArr.push(_createElement(0,config.skipLabels[0], config.prefix+'skip', info.isFirst))\n    }\n\n    // (PREV)\n    if (config.incrementLabels) {\n      elemArr.push(_createElement(info.prev,config.incrementLabels[0],config.prefix+'increment', info.isFirst))\n    }\n    \n    if (!info.isNearStart){\n      pages.leftMarginPages.forEach((i)=>{\n        elemArr.push(_createElement(i))\n      })\n      // (DIVIDER - LEFT SIDE)\n      if (config.divider) {\n        elemArr.push(_createElement(null,config.divider,config.prefix+'divider'))\n      }\n    }\n\n    pages.centerPages.forEach((i)=>{\n      elemArr.push(_createElement(i))\n    })\n\n    if (!info.isNearEnd){\n      // (DIVIDER - LEFT SIDE)\n      if (config.divider) {\n        elemArr.push(_createElement(null,config.divider,config.prefix+'divider'))\n      }\n      \n      pages.rightMarginPages.forEach((i)=>{\n        elemArr.push(_createElement(i))\n      })\n    }\n\n    // (NEXT)\n    if (config.incrementLabels) {\n      elemArr.push(_createElement(info.next,config.incrementLabels[1],config.prefix+'increment', info.isLast))\n    }\n    \n    // (LAST)\n    if (config.skipLabels) {\n      elemArr.push(_createElement(info.totalPages-1,config.skipLabels[1], config.prefix+'skip', info.isLast))\n    }\n\n    // Append into fragment, then append into DOM\n    elemArr.forEach(elem=>paginationFragment.appendChild(elem))\n    el.paginationParent.appendChild(paginationFragment)\n\n  } //_drawPageLinks\n\n  // Returned to the user\n  var api = {\n    \n    info() {\n      return info\n    },\n    setPage(num=0) {\n\n\n      num = isInteger(num) ? parseInt(num) : 0\n      info = setInfo(config, num)\n      \n      // IF we have paginationParent defined is when we\n      // go through logic of creating page elements\n      \n      if ( el.paginationParent && ( info.totalPages > 1 || config.displaySinglePage ) ) {\n        _setPages(num)\n        _drawPageLinks(num)\n      }\n      \n      // Function hook\n      if (config.onPageSelected) {\n        config.onPageSelected(info)\n      }\n\n      if (config.items.length>0) {\n        \n        emptyElement(el.rowsParent)\n        var fragment = document.createDocumentFragment()\n        \n        for (var i = info.firstItemIndex; i <= info.lastItemIndex; i++) {\n          \n          fragment.appendChild(config.items[i])\n        }\n        el.rowsParent.appendChild(fragment)\n      }\n\n\n      \n    },\n    prev(){\n      this.setPage(info.current-1)\n    },\n    next(){\n      this.setPage(info.current+1)\n    },\n    redo(newConfig){\n      config = Object.assign({}, config, newConfig)\n      setConfig(config)\n      this.setPage(0)\n    }\n  }\n\n  api.setPage(config.startingPage)\n\n  return api\n\n\n} // End of our uiPaginate class\n\n\n\n\n\n\nmodule.exports = uiPaginate"]}